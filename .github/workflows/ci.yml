name: CI/CD Pipeline

on:
  push:
    branches: [ main, development, testing ]
  pull_request:
    branches: [ main, development, testing ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-ci.txt
        
    - name: Verify installation
      run: |
        python -c "import pytest; print('pytest:', pytest.__version__)"
        python -c "import flask; print('flask:', flask.__version__)"
        python -c "import dotenv; print('python-dotenv installed successfully')"
        
    - name: Create test environment file
      run: |
        echo "GEMINI_API_KEY=test_key_for_ci" > .env
        echo "GOOGLE_CSE_ID=test_cse_id" >> .env
        echo "SECRET_KEY=test_secret_key" >> .env
        
    - name: Lint with flake8
      run: |
        flake8 --count --show-source --statistics
        
    - name: Test with pytest
      run: |
        export PYTHONPATH="${PYTHONPATH}:$(pwd)"
        python -c "import sys; print('Python path:', sys.path)"
        python -c "from config import Config; print('Config import successful')"
        pytest tests/ -v
